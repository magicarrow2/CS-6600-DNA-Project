{"name":"CS 6600 DNA Computing Project","tagline":"This is a project for a master's class for turning a 3-SAT into a set of unique, straight, non-combining DNA strands representing the true and false states of the variables in the 3-SAT problem.","body":"### Word of Caution\r\nThis software is still under construction and is not yet in a useful state.\r\n\r\n### Introduction\r\nBoolean satisfiability problems are known for being among the first problems to be defined as NP-complete.  In 2002, Ravinderjit S. Braich, Nickolas Chelyapov, Cliff Johnson, Paul W. K. Rothemund, and Leonard Adleman solved a [20-Variable 3-SAT problem using a DNA computer](http://www.sciencemag.org/content/296/5567/499.abstract).  This computer used massive parallelism made possible through DNA computing to search all 2^20 possible solutions to find the one correct solution in a non-exponential number of steps.  The software in this GitHub project is designed to come up with a set of DNA strands that can be used in a DNA computer similar to theirs.\r\n\r\n### Problem Description\r\nThe goal of the project is to input a 3-SAT problem and output a set of DNA strands that can represent the true and false states of each of the unique variables in the 3-SAT problem.  In order to create such a library of DNA strands, the DNA strands have to meet certain requirements:\r\n* Each variable in the 3-SAT problem will be represented by a unique pair of unique DNA sequences: one of the pair represents False, the other represents True.\r\n* Each unique DNA strand in the library must not bind to itself.\r\n* Each unique DNA strand in the library must not bind to other strands in the library.\r\n\r\n### Why It Matters\r\nThis project is important because there are many cases in DNA computing besides this one where DNA strands that have the above mentioned properties are desirable.  In order to represent a concept using a DNA strand, that DNA strand has to be unique, stable, and combine predictably.  Other DNA computers such as ones using toe-hold mediated strand displacement must have DNA strands with these properties.  Unexpected side reactions can easily break a DNA computer.  The self-assembly attribute of DNA strands is what makes DNA computing work, but it is simultaneously what makes the design of such computers hard.\r\n\r\n### Acknowledgements\r\nThis project was started as a project for a CS6600 Intelligent Systems class.  The application incorporates calls to the [NuPack DNA analytics software](http://www.nupack.org/).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}